@model goida.Models.User
@{
    ViewData["Title"] = "Home Page";
}

<div id="loader" class="loader">
    <pre id="debug-output" class="debug-output"></pre>
</div>

<div class="container mt-5 content" id="content" style="display: none;">
    <h1 class="display-4 text-center text-white mb-4">Welcome to goida</h1>

    @if (Context.Session.GetString("UserName") != null)
    {
        <p class="text-center text-light">Welcome, <strong>@Context.Session.GetString("UserName")</strong>!</p>
        <p class="text-center text-light"><strong>Role:</strong> @Context.Session.GetString("Role")</p>
        <div class="text-center mt-3">
            <a href="/Account/Logout" class="btn btn-danger">Logout</a>
        </div>
    }
    else
    {
        <div class="text-center">
            <a href="/Account/Login" class="btn btn-dark">Login</a>
            <a href="/Account/Register" class="btn btn-dark">Register</a>
        </div>

        <p class="text-center text-muted mt-4">Please log in or register to continue.</p>
    }
</div>

<script>
    const messages = [
        "Compiling...",
        "Checking dependencies...",
        "Building modules...",
        "Transpiling code...",
        "Minifying assets...",
        "Optimizing performance...",
        "я надеюсь это не будут читать", 
        "но а в друг.. гойда!",
        "Ready to go!",
    ];

    const debugOutput = document.getElementById('debug-output');
    const content = document.getElementById('content');
    let index = 0;

    function displayMessages() {
        if (index < messages.length) {
            debugOutput.textContent += messages[index] + '\n';
            index++;
            setTimeout(displayMessages, 500);
        } else {
            setTimeout(() => {
                const loader = document.getElementById('loader');
                loader.style.opacity = '0';
                setTimeout(() => {
                    loader.style.display = 'none';
                    content.style.display = 'block';
                    document.body.style.overflow = 'auto';
                }, 1000);
            }, 1000);
        }
    }

    window.onload = displayMessages;
</script>

<style>
    body {
        background: #010409;
        color: #c9d1d9;
        font-family: 'Arial', sans-serif;
        overflow: hidden;
    }
    
    .loader {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(1, 4, 9, 0.9);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
        opacity: 1;
        transition: opacity 1s ease;
    }

    .debug-output {
        color: #c9d1d9;
        font-family: 'Courier New', Courier, monospace;
        white-space: pre-wrap;
        line-height: 1.5;
        max-width: 600px;
        text-align: left;
    }

    .content {
        display: none;
    }
</style>
