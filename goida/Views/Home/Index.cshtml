@model goida.Models.User
@{
ViewData["Title"] = "Home Page";

var quotes = new List<string>
{
    "абоба",
    "бебра",
    "ХАХАХАХАХАХААХ ОНО КОМИТИТЬСЯ",
    "выпустите из подвала пажаласта.. ",
    "Почему нет игры где ты типо грибок и ты прыгаешь на супер марио?\n",
    "рассвет..",
    "В пять утра, когда мир спит, я программирую, как будто от этого зависит жизнь — и, похоже, так и есть",
    "гоооол",
    "https://github.com/m0rp3x/ZalupaHumana",
    "https://m0rp3x.github.io/ZalupaHumana_WebSite/",
    "в сурсах этого сайта ни одной строки которую написал не чат гпт",
    "пивка бы",
    "гыгыгыгыгы"
};

Random random = new Random();
var randomQuote = quotes[random.Next(quotes.Count)];
}
<script src="https://cdn.tailwindcss.com"></script> <!-- Подключаем Tailwind -->
<div id="loader" class="fixed inset-0 bg-gray-900 flex items-center justify-center z-50 transition-opacity duration-1000">
    <pre id="debug-output" class="text-white font-mono text-left whitespace-pre-wrap leading-relaxed max-w-lg"></pre>
</div>

<div class="container mx-auto px-4 mt-12 hidden" id="content">
    <h1 class="text-4xl font-bold text-center text-blue-400 mb-8">Welcome to goida</h1>

    @if (Context.Session.GetString("UserName") != null)
    {
    <p class="text-center text-gray-300">Welcome, <strong>@Context.Session.GetString("UserName")</strong>!</p>
    <div class="text-center mt-3">
        <a href="/Account/Logout" class="bg-gray-800 hover:bg-gray-700 text-white py-2 px-4 rounded">Logout</a>
    </div>
    }
    else
    {
    <div class="text-center">
        <a href="/Account/Login" class="bg-gray-800 hover:bg-gray-700 text-white py-2 px-4 rounded">Login</a>
        <a href="/Account/Register" class="bg-gray-800 hover:bg-gray-700 text-white py-2 px-4 rounded ml-3">Register</a>
    </div>
    <p class="text-center text-gray-500 mt-4">Please log in or register to continue.</p>
    }
    <p class="text-center text-gray-400 mt-4">@randomQuote</p>
</div>

<script>
    const messages = [
        "Compiling...",
        "Checking dependencies...",
        "Building modules...",
        "Transpiling code...",
        "Minifying assets...",
        "Optimizing performance...",
        "я надеюсь это не будут читать",
        "ну а вдруг.. гойда!",
        "Ready to go!",
    ];

    const debugOutput = document.getElementById('debug-output');
    const content = document.getElementById('content');
    let index = 0;

    function displayMessages() {
        if (index < messages.length) {
            debugOutput.textContent += messages[index] + '\n';
            index++;
            setTimeout(displayMessages, 200);
        } else {
            setTimeout(() => {
                const loader = document.getElementById('loader');
                loader.style.opacity = '0';
                setTimeout(() => {
                    loader.style.display = 'none';
                    content.classList.remove('hidden');
                    document.body.style.overflow = 'auto';
                }, 200);
            }, 200);
        }
    }

    window.onload = displayMessages;
</script>
